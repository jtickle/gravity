/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/ActionQueue.js":
/*!****************************!*\
  !*** ./src/ActionQueue.js ***!
  \****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/**\n * @licstart\n *\n * Copyright (C) 2016  Jeffrey W. Tickle\n *\n *\n * The JavaScript code in this page is free software: you can\n * redistribute it and/or modify it under the terms of the GNU\n * General Public License (GNU GPL) as published by the Free Software\n * Foundation, either version 3 of the License, or (at your option)\n * any later version.  The code is distributed WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE.  See the GNU GPL for more details.\n *\n * As additional permission under GNU GPL version 3 section 7, you\n * may distribute non-source (e.g., minimized or compacted) forms of\n * that code without the copy of the GNU GPL normally required by\n * section 4, provided you include this license notice and a URL\n * through which recipients can access the Corresponding Source.\n *\n * @licend\n */\n\n\nmodule.exports = function (target) {\n  var actionQueue = [];\n\n  this.q = function () {\n    var action = Array.prototype.slice.call(arguments, 0);\n    actionQueue.push(action);\n  };\n\n  this.process = function () {\n    while (actionQueue.length > 0) {\n      var next = actionQueue.shift();\n      var method = next.shift();\n\n      if (typeof target[method] == 'undefined') {\n        throw \"Requested handler is undefined: \" + next;\n      }\n\n      target[method].apply(target, next);\n    }\n  };\n};\n\n//# sourceURL=webpack:///./src/ActionQueue.js?");

/***/ }),

/***/ "./src/Input.js":
/*!**********************!*\
  !*** ./src/Input.js ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/**\n * @licstart\n *\n * Copyright (C) 2016  Jeffrey W. Tickle\n *\n *\n * The JavaScript code in this page is free software: you can\n * redistribute it and/or modify it under the terms of the GNU\n * General Public License (GNU GPL) as published by the Free Software\n * Foundation, either version 3 of the License, or (at your option)\n * any later version.  The code is distributed WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE.  See the GNU GPL for more details.\n *\n * As additional permission under GNU GPL version 3 section 7, you\n * may distribute non-source (e.g., minimized or compacted) forms of\n * that code without the copy of the GNU GPL normally required by\n * section 4, provided you include this license notice and a URL\n * through which recipients can access the Corresponding Source.\n *\n * @licend\n */\n\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nmodule.exports = function (sq, rq) {\n  var _this$mouse;\n\n  var _this = this;\n\n  this.active = 'SelectOne';\n  this.options = {};\n  this.kbd = {\n    mod: {\n      shift: false,\n      alt: false,\n      ctrl: false\n    }\n  };\n  this.mouse = (_this$mouse = {\n    x: 0,\n    y: 0,\n    w: 0,\n    m: 0,\n    l: false\n  }, _defineProperty(_this$mouse, \"m\", false), _defineProperty(_this$mouse, \"r\", false), _defineProperty(_this$mouse, \"a\", false), _defineProperty(_this$mouse, \"b\", false), _this$mouse);\n  this.touch = {\n    touches: {},\n    pinch: null,\n    average: null\n  };\n\n  this.changeOptions = function (options) {\n    this.options = options; // TODO: Notify the tool of changes\n  };\n\n  this.changeActive = function (active) {\n    this.active = active; // TODO: Cancel any ongoing action\n  };\n\n  var updateKeyboardData = function updateKeyboardData(e) {\n    var k = _this.kbd.mod;\n    k.alt = e.getModifierState('Alt');\n    k.altgraph = e.getModifierState('AltGraph');\n    k.capslock = e.getModifierState('CapsLock');\n    k.control = e.getModifierState('Control');\n    k.fn = e.getModifierState('Fn');\n    k.meta = e.getModifierState('Meta');\n    k.NumLock = e.getModifierState('NumLock');\n    k.os = e.getModifierState('OS');\n    k.scolllock = e.getModifierState('ScrollLock');\n    k.shift = e.getModifierState('Shift');\n  };\n\n  var updateMouseData = function updateMouseData(e) {\n    var m = _this.mouse;\n    m.x = e.clientX;\n    m.y = e.clientY;\n    m.l = !!(e.buttons & 1);\n    m.m = !!(e.buttons & 4);\n    m.r = !!(e.buttons & 2);\n    m.a = !!(e.buttons & 8);\n    m.b = !!(e.buttons & 16);\n    updateKeyboardData(e);\n  };\n\n  var mouseMoveViewport = function mouseMoveViewport(e, m) {\n    rq.q('pan', e.clientX - m.x, e.clientY - m.y);\n  };\n\n  var onMouseDown = function onMouseDown(e) {\n    var m = _this.mouse;\n\n    if (e.buttons & 1) {\n      document.body.style.cursor = 'move';\n    }\n\n    updateMouseData(e);\n  };\n\n  var onMouseUp = function onMouseUp(e) {\n    var m = _this.mouse;\n    mouseMoveViewport(e, m);\n    document.body.style.cursor = 'default';\n    updateMouseData(e);\n  };\n\n  var onMouseMove = function onMouseMove(e) {\n    var m = _this.mouse;\n\n    if (m.l) {\n      mouseMoveViewport(e, m);\n    }\n\n    updateMouseData(e);\n    rq.q('updateCursor', e.clientX, e.clientY);\n  };\n\n  var onWheel = function onWheel(e) {\n    _this.mouse.w = e.deltaY;\n    _this.mouse.m = e.deltaMode;\n    rq.q('updateCursor', e.clientX, e.clientY);\n    rq.q('zoom', e.deltaY / 1000);\n  };\n\n  var updateTouchData = function updateTouchData(e) {\n    e.preventDefault();\n    var myT = {};\n    var evT = e.touches;\n    var avgX = 0;\n    var avgY = 0;\n    var cnt = 0; // Add current touches\n\n    for (var i in evT) {\n      var t = evT[i];\n      if (_typeof(t) != 'object') continue;\n      myT[t.identifier] = {\n        x: t.clientX,\n        y: t.clientY\n      };\n      avgX += t.clientX;\n      avgY += t.clientY;\n      cnt++;\n    }\n\n    _this.touch.touches = myT; // Calculate average position\n\n    if (!cnt) {\n      _this.touch.average = null;\n    } else {\n      _this.touch.average = {\n        x: avgX / cnt,\n        y: avgY / cnt\n      };\n    } // Set Pinch Data, if available\n\n\n    if (e.touches.length == 2) {\n      var pinch = {};\n      var swap;\n      pinch.x0 = e.touches[0].clientX;\n      pinch.x1 = e.touches[1].clientX;\n      pinch.y0 = e.touches[0].clientY;\n      pinch.y1 = e.touches[1].clientY;\n      pinch.dx = Math.abs(pinch.x0 - pinch.x1) / 2;\n      pinch.dy = Math.abs(pinch.y0 - pinch.y1) / 2;\n      pinch.r = Math.sqrt(pinch.dx * pinch.dx + pinch.dy * pinch.dy);\n      _this.touch.pinch = pinch;\n    } else {\n      _this.touch.pinch = null;\n    }\n  };\n\n  var onTouchStart = function onTouchStart(e) {\n    e.preventDefault();\n    updateTouchData(e);\n  };\n\n  var onTouchMove = function onTouchMove(e) {\n    e.preventDefault();\n    var pp = _this.touch.pinch;\n    var pa = _this.touch.average;\n    updateTouchData(e);\n    var np = _this.touch.pinch;\n    var na = _this.touch.average;\n\n    if (e.touches.length > 0) {\n      rq.q('updateCursor', na.x, na.y);\n\n      if (e.touches.length > 1) {\n        rq.q('zoom', (np.r - pp.r) / -100);\n      }\n\n      rq.q('pan', na.x - pa.x, na.y - pa.y);\n    }\n  };\n\n  var doListeners = function doListeners(fn) {\n    fn(\"mousedown\", onMouseDown);\n    fn(\"mouseup\", onMouseUp);\n    fn(\"mousemove\", onMouseMove);\n    fn(\"wheel\", onWheel);\n    fn(\"touchstart\", onTouchStart);\n    fn(\"touchmove\", onTouchMove);\n    fn(\"touchend\", onTouchMove);\n    fn(\"touchcancel\", onTouchMove);\n  };\n\n  this.activate = function (el) {\n    doListeners(el.addEventListener);\n  };\n\n  this.deactivate = function (el) {\n    doListeners(el.removeEventListener);\n  };\n};\n\n//# sourceURL=webpack:///./src/Input.js?");

/***/ }),

/***/ "./src/Renderer.js":
/*!*************************!*\
  !*** ./src/Renderer.js ***!
  \*************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/**\n * @licstart\n *\n * Copyright (C) 2016  Jeffrey W. Tickle\n *\n *\n * The JavaScript code in this page is free software: you can\n * redistribute it and/or modify it under the terms of the GNU\n * General Public License (GNU GPL) as published by the Free Software\n * Foundation, either version 3 of the License, or (at your option)\n * any later version.  The code is distributed WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE.  See the GNU GPL for more details.\n *\n * As additional permission under GNU GPL version 3 section 7, you\n * may distribute non-source (e.g., minimized or compacted) forms of\n * that code without the copy of the GNU GPL normally required by\n * section 4, provided you include this license notice and a URL\n * through which recipients can access the Corresponding Source.\n *\n * @licend\n */\n\n\nmodule.exports = function (bgColor, canvasId, debug) {\n  // The width and height of the physical viewport\n  var width, height; // The position in worldspace at which the center of the canvas points\n\n  this.centerX = 0;\n  this.centerY = 0; // The base scale setting (Integer from -inf to +inf where 0 = scale of 1:1\n  // and negative gives you a wider perspective)\n\n  var scaleBase = 0; // The computed scale setting Math.pow(Math.E, scaleBase)\n\n  var scale = 1; // Cache of rendered stars\n\n  var starCache = [];\n  var view = document.getElementById(canvasId);\n  var ctx = view.getContext('2d');\n  this.view = view;\n  this.ctx = ctx;\n  this.lastX = 0;\n  this.lastY = 0;\n\n  var resizeSelf = function resizeSelf() {\n    width = document.documentElement.clientWidth;\n    height = document.documentElement.clientHeight;\n    view.getContext('2d').canvas.width = width;\n    view.getContext('2d').canvas.height = height;\n    debug.rendWidth = width;\n    debug.rendHeight = height;\n  };\n\n  resizeSelf();\n  var bgColor = '#000000';\n\n  var _this = this; // Handle window resize gracefully\n\n\n  window.addEventListener(\"resize\", function () {\n    resizeSelf();\n\n    _this.blank();\n  });\n\n  this.blank = function () {\n    ctx.fillStyle = bgColor;\n    ctx.fillRect(0, 0, width, height);\n  };\n\n  var setScaleBase = function setScaleBase(s) {\n    scaleBase = s;\n    scale = Math.pow(Math.E, scaleBase);\n    debug.rScale = scale;\n    debug.scaleBase = scaleBase;\n  };\n\n  var getScaleBase = function getScaleBase() {\n    return scaleBase;\n  };\n\n  var getScale = function getScale() {\n    return scale;\n  };\n\n  this.setScaleBase = setScaleBase;\n  this.getScaleBase = getScaleBase;\n  this.getScale = getScale;\n\n  var screenToX = function screenToX(screenX) {\n    return (screenX - width / 2) * scale + _this.centerX;\n  };\n\n  var screenToY = function screenToY(screenY) {\n    return (screenY - height / 2) * scale + _this.centerY;\n  };\n\n  var XToScreen = function XToScreen(worldX) {\n    return width / 2 + (worldX - _this.centerX) / scale;\n  };\n\n  var YToScreen = function YToScreen(worldY) {\n    return height / 2 + (worldY - _this.centerY) / scale;\n  };\n\n  this.screenToX = screenToX;\n  this.screenToY = screenToY;\n  this.XToScreen = XToScreen;\n  this.YToScreen = YToScreen;\n\n  this.getWidth = function () {\n    return width;\n  };\n\n  this.getHeight = function () {\n    return height;\n  };\n\n  var getStarCanvas = function getStarCanvas(r) {\n    if (!starCache[r]) {\n      var s = document.createElement('canvas');\n\n      if (r > 1) {\n        s.width = r * 2 + 2;\n        s.height = r * 2 + 2;\n      } else {\n        s.width = 3;\n        s.height = 3;\n      }\n\n      var c = s.getContext('2d');\n\n      if (r > 1) {\n        c.beginPath();\n        c.arc(r + 1, r + 1, r, 0, 2 * Math.PI);\n        c.closePath();\n        c.fillStyle = '#FFFF66';\n        c.fill();\n      } else {\n        c.fillStyle = 'rgb(' + Math.floor(255 * r) + ',' + Math.floor(255 * r) + ',' + Math.floor(96 * r) + ')';\n        c.fillRect(1, 1, 1, 1);\n      }\n\n      starCache[r] = s;\n    }\n\n    return starCache[r];\n  };\n\n  this.getStarCache = function () {\n    return starCache;\n  };\n\n  var drawStar = function drawStar(star) {\n    var r = star.r / scale;\n    var sc = 10;\n\n    if (r <= 1) {\n      sc = 255;\n    }\n\n    r = Math.floor(r * sc) / sc;\n    var c = getStarCanvas(r);\n    ctx.drawImage(c, XToScreen(star.x) - r, YToScreen(star.y) - r);\n  };\n\n  this.drawStars = function (stars) {\n    for (var i = 0; i < stars.length; i++) {\n      drawStar(stars[i]);\n    }\n  };\n\n  this.drawOverlay = function (selected) {\n    // Draw Selection Boxes\n    ctx.strokeStyle = '#00CC00';\n    ctx.lineWidth = 1;\n\n    for (var i in selected) {\n      var s = selected[i];\n      var x = XToScreen(s.x);\n      var y = YToScreen(s.y);\n      ctx.strokeRect(x - 10, y - 10, 20, 20);\n      ctx.closePath();\n    }\n  };\n\n  this.updateCursor = function (x, y) {\n    _this.lastX = x;\n    _this.lastY = y;\n    debug.rLastX = x;\n    debug.rLastY = y;\n  };\n\n  this.zoom = function (factor) {\n    var x = screenToX(_this.lastX);\n    var y = screenToY(_this.lastY);\n    var dx = (x - _this.centerX) / scale;\n    var dy = (y - _this.centerY) / scale;\n    setScaleBase(scaleBase + factor);\n\n    _this.setCenter(x - dx * scale, y - dy * scale);\n  };\n\n  this.pan = function (dx, dy) {\n    _this.setCenter(_this.centerX - dx * scale, _this.centerY - dy * scale);\n  };\n\n  this.setCenter = function (x, y) {\n    _this.centerX = x;\n    _this.centerY = y;\n    debug.rCenterX = x;\n    debug.rCenterY = y;\n  };\n\n  this.blank();\n\n  _this.setCenter(0, 0);\n};\n\n//# sourceURL=webpack:///./src/Renderer.js?");

/***/ }),

/***/ "./src/Simulation.js":
/*!***************************!*\
  !*** ./src/Simulation.js ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/**\n * @licstart\n *\n * Copyright (C) 2016  Jeffrey W. Tickle\n *\n *\n * The JavaScript code in this page is free software: you can\n * redistribute it and/or modify it under the terms of the GNU\n * General Public License (GNU GPL) as published by the Free Software\n * Foundation, either version 3 of the License, or (at your option)\n * any later version.  The code is distributed WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE.  See the GNU GPL for more details.\n *\n * As additional permission under GNU GPL version 3 section 7, you\n * may distribute non-source (e.g., minimized or compacted) forms of\n * that code without the copy of the GNU GPL normally required by\n * section 4, provided you include this license notice and a URL\n * through which recipients can access the Corresponding Source.\n *\n * @licend\n */\n\n\nvar Star = __webpack_require__(/*! ./object/Star */ \"./src/object/Star.js\");\n\nvar starid = 0;\n\nmodule.exports = function (G0) {\n  this.G = G0;\n\n  var _this = this;\n\n  var calcGravityAndCollide = function calcGravityAndCollide(G, S1, S2) {\n    var xd, yd, r2, r, f, th, fx, fy; // Discrete Gravity Approximation.\n    // NOTE: We are ignoring the time of the frame and simply assuming that it is\n    // a relatively constant scaling factor corrected for in the G constant.  This\n    // does add error to the approximation.\n\n    xd = S2.x - S1.x; // X Component of distance\n\n    yd = S2.y - S1.y; // Y Component of distance\n\n    r2 = xd * xd + yd * yd; // Distance squared between stars\n\n    f = G / r2; // Force due to gravity\n\n    th = Math.atan2(xd, yd); // Angle between line through stars and X-axis\n\n    fx = f * Math.sin(th); // X Component of Force\n\n    fy = f * Math.cos(th); // Y Component of Force\n    // Apply force components to star momentum components\n    // At this point, we multiply in the mass of the other star to get\n    // a true value of acceleration\n\n    S1.dx += fx * S2.m;\n    S1.dy += fy * S2.m;\n    S2.dx -= fx * S1.m;\n    S2.dy -= fy * S1.m; // Collision detection works by testing whether the distance\n    // between star centers is less than the sum of their radii. This\n    // works most of the time, but can occasionally result in failed\n    // collision detection (and therefore extreme, unrealistic momenta)\n    // if masses are high and frames are long.  A better method would\n    // be to predict the stellar motions and determine intersection of\n    // line segments, but that is just too much wasted calculation for\n    // now.  Something to try later:\n    // http://bryceboe.com/2006/10/23/line-segment-intersection-algorithm/\n\n    return r2 <= Math.floor((S1.r + S2.r) * (S1.r + S2.r));\n  }; // All of this collision code makes the wild assumption that no more\n  // than two stars can be involved in a collision, which is not\n  // enforced but good enough for government work.  If a star collides\n  // with more than one other star in the frame, this whole thing will\n  // crash because of the screwed up array indexes.\n\n\n  var mergeStars = function mergeStars(stars, cs) {\n    var i, c, i1, i2, S1, S2, m;\n\n    for (i = 0; i < cs.length; i++) {\n      c = cs[i];\n      console.log('Removing ' + (c.length - 1) + ' stars in collision');\n      console.log(c);\n      console.log(stars.length);\n\n      while (c.length > 1) {\n        i1 = c[c.length - 2];\n        i2 = c[c.length - 1];\n        S1 = stars[i1];\n        S2 = stars[i2];\n        m = S1.m + S2.m;\n        S1.dx = (S1.dx * S1.m + S2.dx * S2.m) / m;\n        S1.dy = (S1.dy * S1.m + S2.dy * S2.m) / m;\n        S1.setMass(m);\n\n        if (_this.unselect(S2)) {\n          _this.select(S1);\n        }\n\n        stars.splice(i2, 1);\n        c.pop();\n      }\n\n      console.log(stars.length);\n    }\n  };\n\n  this.applyGravity = function (dt) {\n    var i, j, S1, S2, collisions, inCollision;\n    collisions = [];\n\n    var addCollision = function addCollision(S1, S2) {\n      // Check to see if either are already involved in a collision.\n      // Not having this caused some issues when multiple stars would\n      // collide in the same event - menory getting deleted out from\n      // under itself, you understand.  This looks bad at O(n^2) but\n      // realistically it would be a very unusual situation for there\n      // to be particularly many collisions at the same time.\n      for (var i = 0; i < collisions.length; i++) {\n        for (var j = 0; j < collisions[i].length; j++) {\n          if (collisions[i][j] == S1) {\n            collisions[i].push(S2);\n            return;\n          } else if (collisions[i][j] == S2) {\n            collisions[i].push(S1);\n            return;\n          }\n        }\n      } // Neither are already colliding with anything\n\n\n      collisions.push([S1, S2]);\n    };\n\n    for (i = 0; i < this.stars.length; i++) {\n      S1 = this.stars[i];\n\n      for (j = i + 1; j < this.stars.length; j++) {\n        S2 = this.stars[j]; // Gravity calculation also detects collisions for now\n\n        if (calcGravityAndCollide(this.G, S1, S2)) {\n          addCollision(i, j);\n        }\n      } // Apply Momentum\n\n\n      S1.x += S1.dx * dt;\n      S1.y += S1.dy * dt;\n    }\n\n    mergeStars(this.stars, collisions);\n  };\n\n  this.addStar = function (x, y, dx, dy, m) {\n    var s = new Star(x, y, dx, dy, m);\n\n    _this.stars.push(s);\n\n    return s;\n  };\n\n  this.select = function (star) {\n    if (!_this.isSelected(star)) {\n      _this.selected.push(star);\n\n      return true;\n    }\n\n    return false;\n  };\n\n  this.unselect = function (star) {\n    var idx = _this.selected.indexOf(star);\n\n    if (idx == -1) return false;\n\n    _this.selected.splice(idx, 1);\n\n    return true;\n  };\n\n  this.isSelected = function (star) {\n    return _this.selected.indexOf(star) > -1;\n  };\n\n  this.toggleSelected = function (star) {\n    if (!this.isSelected(star)) {\n      this.select(star);\n      return true;\n    } else {\n      this.unselect(star);\n      return false;\n    }\n  };\n\n  this.setMode = function (mode) {\n    if (_this.mode) {\n      _this.mode.deactivate();\n    }\n\n    if (mode) {\n      _this.mode = mode;\n\n      _this.mode.activate();\n    } else {\n      _this.mode = null;\n    }\n  };\n\n  this.stars = [];\n  this.selected = [];\n  this.mode = null;\n  this.debug = {};\n};\n\n//# sourceURL=webpack:///./src/Simulation.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _Renderer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Renderer */ \"./src/Renderer.js\");\n/* harmony import */ var _Renderer__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_Renderer__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _Simulation__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Simulation */ \"./src/Simulation.js\");\n/* harmony import */ var _Simulation__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_Simulation__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _ActionQueue__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ActionQueue */ \"./src/ActionQueue.js\");\n/* harmony import */ var _ActionQueue__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_ActionQueue__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _Input__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Input */ \"./src/Input.js\");\n/* harmony import */ var _Input__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_Input__WEBPACK_IMPORTED_MODULE_3__);\n/**\n * @licstart\n *\n * Copyright (C) 2016  Jeffrey W. Tickle\n *\n *\n * The JavaScript code in this page is free software: you can\n * redistribute it and/or modify it under the terms of the GNU\n * General Public License (GNU GPL) as published by the Free Software\n * Foundation, either version 3 of the License, or (at your option)\n * any later version.  The code is distributed WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE.  See the GNU GPL for more details.\n *\n * As additional permission under GNU GPL version 3 section 7, you\n * may distribute non-source (e.g., minimized or compacted) forms of\n * that code without the copy of the GNU GPL normally required by\n * section 4, provided you include this license notice and a URL\n * through which recipients can access the Corresponding Source.\n *\n * @licend\n */\n\n\n\n //import UI from 'UI';\n\n\n\n\nvar run = function run() {\n  // The Simulation\n  var simulation = new _Simulation__WEBPACK_IMPORTED_MODULE_1___default.a(1);\n  var sq = new _ActionQueue__WEBPACK_IMPORTED_MODULE_2___default.a(simulation); // The Renderer\n\n  var renderer = new _Renderer__WEBPACK_IMPORTED_MODULE_0___default.a(0x000000, 'gravity', simulation.debug);\n  var rq = new _ActionQueue__WEBPACK_IMPORTED_MODULE_2___default.a(renderer); // The Input Handler\n\n  var input = new _Input__WEBPACK_IMPORTED_MODULE_3___default.a(sq, rq);\n  input.activate(renderer.view); // The UI\n  //var ui = new UI('side', simulation, renderer, input);\n  // Previous frame time, updated per-frame by animate function\n\n  var pt = 0; // Create Public API\n\n  window.GRAVITY = {};\n  var stats = {\n    cursec: 0,\n    count: 0,\n    dt: {\n      f: 0,\n      g: 0,\n      s: 0,\n      o: 0,\n      u: 0,\n      t: 0\n    }\n  };\n  var renderStats = {\n    fps: 0,\n    dt_f: 0,\n    dt_g: 0,\n    dt_s: 0,\n    dt_o: 0,\n    dt_u: 0,\n    dt_t: 0\n  };\n  var timers = [];\n  var time = {\n    begin: function begin() {\n      timers.push(Date.now());\n    },\n    end: function end() {\n      var now = Date.now();\n      var then = timers.pop();\n      return (now - then) / 1000;\n    }\n  };\n\n  var floor5 = function floor5(n) {\n    return Math.floor(n * 1000) / 1000;\n  };\n\n  var justshowstat = function justshowstat(id, n) {\n    renderStats[id] = n;\n  };\n\n  var showstat = function showstat(id, n, count) {\n    justshowstat(id, floor5(n / count));\n  }; // Adds a star to the simulation\n\n\n  GRAVITY.addStar = function (x, y, dx, dy, m) {\n    simulation.addStar(x, y, dx, dy, m);\n  };\n\n  function animate(ct) {\n    var dt, collisions; // Delta-Time in Seconds since Last Frame\n\n    var dt = (ct - pt) / 1000;\n    time.begin();\n    stats.dt.f += floor5(dt); // Don't do any actual simulation unless time has moved.  Saves us\n    // some later division by zero problems, and is only a problem in\n    // the first couple of frames.\n\n    if (dt > 0) {\n      try {\n        // Black-out the old stars; NOTE: we are not clearing the whole\n        // frame here because we would like to keep star-trails around,\n        // which cannot be re-calculated due to the chaotic nature of this\n        // simulation.\n        renderer.blank(); // Apply Gravity (note: this will remove stars that have collided)\n\n        time.begin();\n        simulation.applyGravity(dt);\n        stats.dt.g += time.end(); // Let the Input Mode have a chance to change the state of the system\n\n        rq.process(); // Draw stars in new positions\n\n        time.begin();\n        renderer.drawStars(simulation.stars);\n        stats.dt.s += time.end(); // Draw Overlay - non-HTMl UI elements\n\n        time.begin();\n        renderer.drawOverlay(simulation.selected);\n        stats.dt.o += time.end(); // Let the Input Mode draw on top of all that\n        // Update the React HTML UI\n\n        time.begin(); //ui.render();\n\n        stats.dt.u += time.end(); // Calculate FPS\n\n        stats.count++;\n        var sec = Math.floor(ct / 1000);\n\n        if (sec != stats.cursec) {\n          // Display Stats once a second\n          justshowstat('fps', stats.count);\n          showstat('dt_f', stats.dt.f, stats.count);\n          showstat('dt_g', stats.dt.g, stats.count);\n          showstat('dt_s', stats.dt.s, stats.count);\n          showstat('dt_o', stats.dt.o, stats.count);\n          showstat('dt_u', stats.dt.u, stats.count);\n          showstat('dt_t', stats.dt.t, stats.count); //ui.update();\n\n          console.log(renderer.getStarCache());\n          stats.cursec = sec;\n          stats.count = 0;\n          stats.dt.f = 0;\n          stats.dt.g = 0;\n          stats.dt.s = 0;\n          stats.dt.o = 0;\n          stats.dt.u = 0;\n          stats.dt.t = 0;\n        } // Advance Previous Time\n\n\n        pt = ct;\n        stats.dt.t += time.end();\n        timers.length = 0;\n      } catch (e) {\n        console.log('Caught exception, requesting next frame anyway... ', e);\n      }\n    } // Request to call myself at next frame\n\n\n    requestAnimationFrame(animate);\n  }\n\n  requestAnimationFrame(animate);\n};\n\ndocument.addEventListener('DOMContentLoaded', function () {\n  run(); // Generate a bunch of random stars\n\n  for (var i = 0; i < 300; i++) {\n    var radius = Math.random() * 350 + 50;\n    var theta = Math.random() * 2 * Math.PI;\n    var magnit = radius / 20;\n    var direc = theta - 90;\n    window.GRAVITY.addStar(radius * Math.cos(theta), radius * Math.sin(theta), magnit * Math.cos(direc), magnit * Math.sin(direc), Math.random() * 90 + 10);\n  }\n});\n\n//# sourceURL=webpack:///./src/index.js?");

/***/ }),

/***/ "./src/object/Star.js":
/*!****************************!*\
  !*** ./src/object/Star.js ***!
  \****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/**\n * @licstart\n *\n * Copyright (C) 2016  Jeffrey W. Tickle\n *\n *\n * The JavaScript code in this page is free software: you can\n * redistribute it and/or modify it under the terms of the GNU\n * General Public License (GNU GPL) as published by the Free Software\n * Foundation, either version 3 of the License, or (at your option)\n * any later version.  The code is distributed WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE.  See the GNU GPL for more details.\n *\n * As additional permission under GNU GPL version 3 section 7, you\n * may distribute non-source (e.g., minimized or compacted) forms of\n * that code without the copy of the GNU GPL normally required by\n * section 4, provided you include this license notice and a URL\n * through which recipients can access the Corresponding Source.\n *\n * @licend\n */\n\n\nvar starid = 0;\n\nmodule.exports = function (x, y, dx, dy, mass) {\n  this.id = starid++; // Unique ID\n\n  this.x = x; // X Component of Position\n\n  this.y = y; // Y Component of Position\n\n  this.dx = dx; // X Component of Momentum\n\n  this.dy = dy; // Y Component of Momentum\n\n  this.setMass(mass);\n};\n\nmodule.exports.prototype.setMass = function (mass) {\n  this.m = mass;\n  this.r = Math.log10(mass);\n};\n\n//# sourceURL=webpack:///./src/object/Star.js?");

/***/ })

/******/ });